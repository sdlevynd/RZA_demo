@page "/login"
@using RZA_sly.Models
@using RZA_sly.Utilities
@inject RZA_sly.Services.CustomerService CustomerService
@inject NavigationManager NavigationManager
@inject UserSession UserSession

@rendermode InteractiveServer

<h3>Log In</h3>

<EditForm Model="newCustomer" OnValidSubmit="HandleValidSubmit" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="newCustomer.Username" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="password" type="password" />
    </div>

    <button type="submit">Register</button>
</EditForm>

@code {
    private Customer newCustomer = new Customer();
    private string password;

    #region Hidden
    protected override async Task OnInitializedAsync()
    {
        if (UserSession.UserId != 0)
        {
            NavigationManager.NavigateTo("/account");
        }
    }
    #endregion

    private async Task HandleValidSubmit()
    {
        newCustomer.Password = await PasswordUtils.HashPassword(password);
        newCustomer.Password = password;
        newCustomer = await CustomerService.LogIn(newCustomer);
        if (newCustomer == null)
        {
            Console.WriteLine("could not log in");
        }
        else
        {
            #region Hidden
            UserSession.UserId = newCustomer.CustomerId;
            #endregion
            NavigationManager.NavigateTo("/account");
        }
    }
}